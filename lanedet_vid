import cv2 as cv
import time
import utils_rev
import yolov4

# Function to process a single frame
def process_frame(frame, model_file, config_file):
    # Resize frame
    frame_resized = cv.resize(frame, (416, 416))

    # Run detection with yolov4
    labels, scores, bboxes = yolov4.predict(frame_resized, model_file, config_file, 0.5)

    # Draw centers
    centers, frame_centers = utils_rev.draw_centers(frame_resized, bboxes)

    # Run hough transform
    slopes, averaged_line, frame_hough = utils_rev.hough_transform(frame_centers, 10, 10, 50, 70, 110, show=True)

    return frame_hough

# Take input
cap = cv.VideoCapture('assets/videos/finaltest2.mp4')
model_file = 'yolo_archive/models/yolov4/v4/yolov4-obj_best.weights'
config_file = 'yolo_archive/yolov4-obj.cfg'

frame_count = 0
start_time = time.time()

while cap.isOpened():
    ret, frame = cap.read()
    if ret:

        # Process frame
        frame_final = process_frame(frame, model_file, config_file)

        # Display the resulting frame
        cv.imshow('frame', frame_final)

        # Increment frame counter
        frame_count += 1

        # Calculate FPS
        elapsed_time = time.time() - start_time
        fps = frame_count / elapsed_time
        print('FPS: ' + str(fps))

        if cv.waitKey(1) & 0xFF == ord('q'):
            break
    else:
        break

# Release resources
cap.release()
cv.destroyAllWindows()